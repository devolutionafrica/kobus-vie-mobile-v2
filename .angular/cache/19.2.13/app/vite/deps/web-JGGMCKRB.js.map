{
  "version": 3,
  "sources": ["../../../../../../node_modules/@capgo/capacitor-social-login/dist/esm/base.js", "../../../../../../node_modules/@capgo/capacitor-social-login/dist/esm/apple-provider.js", "../../../../../../node_modules/@capgo/capacitor-social-login/dist/esm/facebook-provider.js", "../../../../../../node_modules/@capgo/capacitor-social-login/dist/esm/google-provider.js", "../../../../../../node_modules/@capgo/capacitor-social-login/dist/esm/web.js"],
  "sourcesContent": ["import { WebPlugin } from '@capacitor/core';\nexport class BaseSocialLogin extends WebPlugin {\n  constructor() {\n    super();\n  }\n  parseJwt(token) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  }\n  async loadScript(src) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.async = true;\n      script.onload = () => {\n        resolve();\n      };\n      script.onerror = reject;\n      document.body.appendChild(script);\n    });\n  }\n}\nBaseSocialLogin.OAUTH_STATE_KEY = 'social_login_oauth_pending';\n", "import { BaseSocialLogin } from './base';\nexport class AppleSocialLogin extends BaseSocialLogin {\n  constructor() {\n    super(...arguments);\n    this.clientId = null;\n    this.redirectUrl = null;\n    this.scriptLoaded = false;\n    this.scriptUrl = 'https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js';\n  }\n  async initialize(clientId, redirectUrl) {\n    this.clientId = clientId;\n    this.redirectUrl = redirectUrl || null;\n    if (clientId) {\n      await this.loadAppleScript();\n    }\n  }\n  async login(options) {\n    if (!this.clientId) {\n      throw new Error('Apple Client ID not set. Call initialize() first.');\n    }\n    if (!this.scriptLoaded) {\n      throw new Error('Apple Sign-In script not loaded.');\n    }\n    return new Promise((resolve, reject) => {\n      var _a;\n      AppleID.auth.init({\n        clientId: this.clientId,\n        scope: ((_a = options.scopes) === null || _a === void 0 ? void 0 : _a.join(' ')) || 'name email',\n        redirectURI: this.redirectUrl || window.location.href,\n        state: options.state,\n        nonce: options.nonce,\n        usePopup: true\n      });\n      AppleID.auth.signIn().then(res => {\n        var _a, _b, _c, _d, _e;\n        const result = {\n          profile: {\n            user: res.user || '',\n            email: ((_a = res.user) === null || _a === void 0 ? void 0 : _a.email) || null,\n            givenName: ((_c = (_b = res.user) === null || _b === void 0 ? void 0 : _b.name) === null || _c === void 0 ? void 0 : _c.firstName) || null,\n            familyName: ((_e = (_d = res.user) === null || _d === void 0 ? void 0 : _d.name) === null || _e === void 0 ? void 0 : _e.lastName) || null\n          },\n          accessToken: {\n            token: res.authorization.id_token || ''\n          },\n          idToken: res.authorization.code || null\n        };\n        resolve({\n          provider: 'apple',\n          result\n        });\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n  async logout() {\n    // Apple doesn't provide a logout method for web\n    console.log('Apple logout: Session should be managed on the client side');\n  }\n  async isLoggedIn() {\n    // Apple doesn't provide a method to check login status on web\n    console.log('Apple login status should be managed on the client side');\n    return {\n      isLoggedIn: false\n    };\n  }\n  async getAuthorizationCode() {\n    // Apple authorization code should be obtained during login\n    console.log('Apple authorization code should be stored during login');\n    throw new Error('Apple authorization code not available');\n  }\n  async refresh() {\n    // Apple doesn't provide a refresh method for web\n    console.log('Apple refresh not available on web');\n  }\n  async loadAppleScript() {\n    if (this.scriptLoaded) return;\n    return this.loadScript(this.scriptUrl).then(() => {\n      this.scriptLoaded = true;\n    });\n  }\n}\n", "import { BaseSocialLogin } from './base';\nexport class FacebookSocialLogin extends BaseSocialLogin {\n  constructor() {\n    super(...arguments);\n    this.appId = null;\n    this.scriptLoaded = false;\n  }\n  async initialize(appId) {\n    this.appId = appId;\n    if (appId) {\n      await this.loadFacebookScript();\n      FB.init({\n        appId: this.appId,\n        version: 'v17.0',\n        xfbml: true,\n        cookie: true\n      });\n    }\n  }\n  async login(options) {\n    if (!this.appId) {\n      throw new Error('Facebook App ID not set. Call initialize() first.');\n    }\n    return new Promise((resolve, reject) => {\n      FB.login(response => {\n        if (response.status === 'connected') {\n          FB.api('/me', {\n            fields: 'id,name,email,picture'\n          }, userInfo => {\n            var _a, _b;\n            const result = {\n              accessToken: {\n                token: response.authResponse.accessToken,\n                userId: response.authResponse.userID\n              },\n              profile: {\n                userID: userInfo.id,\n                name: userInfo.name,\n                email: userInfo.email || null,\n                imageURL: ((_b = (_a = userInfo.picture) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.url) || null,\n                friendIDs: [],\n                birthday: null,\n                ageRange: null,\n                gender: null,\n                location: null,\n                hometown: null,\n                profileURL: null\n              },\n              idToken: null\n            };\n            resolve({\n              provider: 'facebook',\n              result\n            });\n          });\n        } else {\n          reject(new Error('Facebook login failed'));\n        }\n      }, {\n        scope: options.permissions.join(',')\n      });\n    });\n  }\n  async logout() {\n    return new Promise(resolve => {\n      FB.logout(() => resolve());\n    });\n  }\n  async isLoggedIn() {\n    return new Promise(resolve => {\n      FB.getLoginStatus(response => {\n        resolve({\n          isLoggedIn: response.status === 'connected'\n        });\n      });\n    });\n  }\n  async getAuthorizationCode() {\n    return new Promise((resolve, reject) => {\n      FB.getLoginStatus(response => {\n        var _a;\n        if (response.status === 'connected') {\n          resolve({\n            jwt: ((_a = response.authResponse) === null || _a === void 0 ? void 0 : _a.accessToken) || ''\n          });\n        } else {\n          reject(new Error('No Facebook authorization code available'));\n        }\n      });\n    });\n  }\n  async refresh(options) {\n    await this.login(options);\n  }\n  async loadFacebookScript() {\n    if (this.scriptLoaded) return;\n    return this.loadScript('https://connect.facebook.net/en_US/sdk.js').then(() => {\n      this.scriptLoaded = true;\n    });\n  }\n}\n", "import { BaseSocialLogin } from './base';\nexport class GoogleSocialLogin extends BaseSocialLogin {\n  constructor() {\n    super(...arguments);\n    this.clientId = null;\n    this.loginType = 'online';\n    this.GOOGLE_TOKEN_REQUEST_URL = 'https://www.googleapis.com/oauth2/v3/tokeninfo';\n    this.GOOGLE_STATE_KEY = 'capgo_social_login_google_state';\n  }\n  async initialize(clientId, mode, hostedDomain, redirectUrl) {\n    this.clientId = clientId;\n    if (mode) {\n      this.loginType = mode;\n    }\n    this.hostedDomain = hostedDomain;\n    this.redirectUrl = redirectUrl;\n  }\n  async login(options) {\n    if (!this.clientId) {\n      throw new Error('Google Client ID not set. Call initialize() first.');\n    }\n    let scopes = options.scopes || [];\n    if (scopes.length > 0) {\n      // If scopes are provided, directly use the traditional OAuth flow\n      if (!scopes.includes('https://www.googleapis.com/auth/userinfo.email')) {\n        scopes.push('https://www.googleapis.com/auth/userinfo.email');\n      }\n      if (!scopes.includes('https://www.googleapis.com/auth/userinfo.profile')) {\n        scopes.push('https://www.googleapis.com/auth/userinfo.profile');\n      }\n      if (!scopes.includes('openid')) {\n        scopes.push('openid');\n      }\n    } else {\n      scopes = ['https://www.googleapis.com/auth/userinfo.email', 'https://www.googleapis.com/auth/userinfo.profile', 'openid'];\n    }\n    const nonce = options.nonce || Math.random().toString(36).substring(2);\n    // If scopes are provided, directly use the traditional OAuth flow\n    return this.traditionalOAuth({\n      scopes,\n      nonce,\n      hostedDomain: this.hostedDomain\n    });\n  }\n  async logout() {\n    if (this.loginType === 'offline') {\n      return Promise.reject(\"Offline login doesn't store tokens. logout is not available\");\n    }\n    // eslint-disable-next-line\n    const state = this.getGoogleState();\n    if (!state) return;\n    await this.rawLogoutGoogle(state.accessToken);\n  }\n  async isLoggedIn() {\n    if (this.loginType === 'offline') {\n      return Promise.reject(\"Offline login doesn't store tokens. isLoggedIn is not available\");\n    }\n    // eslint-disable-next-line\n    const state = this.getGoogleState();\n    if (!state) return {\n      isLoggedIn: false\n    };\n    try {\n      const isValidAccessToken = await this.accessTokenIsValid(state.accessToken);\n      const isValidIdToken = this.idTokenValid(state.idToken);\n      if (isValidAccessToken && isValidIdToken) {\n        return {\n          isLoggedIn: true\n        };\n      } else {\n        try {\n          await this.rawLogoutGoogle(state.accessToken, false);\n        } catch (e) {\n          console.error('Access token is not valid, but cannot logout', e);\n        }\n        return {\n          isLoggedIn: false\n        };\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  async getAuthorizationCode() {\n    if (this.loginType === 'offline') {\n      return Promise.reject(\"Offline login doesn't store tokens. getAuthorizationCode is not available\");\n    }\n    // eslint-disable-next-line\n    const state = this.getGoogleState();\n    if (!state) throw new Error('No Google authorization code available');\n    try {\n      const isValidAccessToken = await this.accessTokenIsValid(state.accessToken);\n      const isValidIdToken = this.idTokenValid(state.idToken);\n      if (isValidAccessToken && isValidIdToken) {\n        return {\n          accessToken: state.accessToken,\n          jwt: state.idToken\n        };\n      } else {\n        try {\n          await this.rawLogoutGoogle(state.accessToken, false);\n        } catch (e) {\n          console.error('Access token is not valid, but cannot logout', e);\n        }\n        throw new Error('No Google authorization code available');\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  async refresh() {\n    // For Google, we can prompt for re-authentication\n    return Promise.reject('Not implemented');\n  }\n  handleOAuthRedirect(url) {\n    const paramsRaw = url.searchParams;\n    const code = paramsRaw.get('code');\n    if (code && paramsRaw.has('scope')) {\n      return {\n        provider: 'google',\n        result: {\n          serverAuthCode: code,\n          responseType: 'offline'\n        }\n      };\n    }\n    const hash = url.hash.substring(1);\n    console.log('handleOAuthRedirect', url.hash);\n    if (!hash) return null;\n    console.log('handleOAuthRedirect ok');\n    const params = new URLSearchParams(hash);\n    const accessToken = params.get('access_token');\n    const idToken = params.get('id_token');\n    if (accessToken && idToken) {\n      localStorage.removeItem(BaseSocialLogin.OAUTH_STATE_KEY);\n      const profile = this.parseJwt(idToken);\n      return {\n        provider: 'google',\n        result: {\n          accessToken: {\n            token: accessToken\n          },\n          idToken,\n          profile: {\n            email: profile.email || null,\n            familyName: profile.family_name || null,\n            givenName: profile.given_name || null,\n            id: profile.sub || null,\n            name: profile.name || null,\n            imageUrl: profile.picture || null\n          },\n          responseType: 'online'\n        }\n      };\n    }\n    return null;\n  }\n  async accessTokenIsValid(accessToken) {\n    const url = `${this.GOOGLE_TOKEN_REQUEST_URL}?access_token=${encodeURIComponent(accessToken)}`;\n    try {\n      // Make the GET request using fetch\n      const response = await fetch(url);\n      // Check if the response is successful\n      if (!response.ok) {\n        console.log(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response not successful. Status code: ${response.status}. Assuming that the token is not valid`);\n        return false;\n      }\n      // Get the response body as text\n      const responseBody = await response.text();\n      if (!responseBody) {\n        console.error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response body is null`);\n        throw new Error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response body is null`);\n      }\n      // Parse the response body as JSON\n      let jsonObject;\n      try {\n        jsonObject = JSON.parse(responseBody);\n      } catch (e) {\n        console.error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response body is not valid JSON. Error: ${e}`);\n        throw new Error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response body is not valid JSON. Error: ${e}`);\n      }\n      // Extract the 'expires_in' field\n      const expiresInStr = jsonObject['expires_in'];\n      if (expiresInStr === undefined || expiresInStr === null) {\n        console.error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response JSON does not include 'expires_in'.`);\n        throw new Error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. Response JSON does not include 'expires_in'.`);\n      }\n      // Parse 'expires_in' as an integer\n      let expiresInInt;\n      try {\n        expiresInInt = parseInt(expiresInStr, 10);\n        if (isNaN(expiresInInt)) {\n          throw new Error(`'expires_in' is not a valid integer`);\n        }\n      } catch (e) {\n        console.error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. 'expires_in': ${expiresInStr} is not a valid integer. Error: ${e}`);\n        throw new Error(`Invalid response from ${this.GOOGLE_TOKEN_REQUEST_URL}. 'expires_in': ${expiresInStr} is not a valid integer. Error: ${e}`);\n      }\n      // Determine if the access token is valid based on 'expires_in'\n      return expiresInInt > 5;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n  idTokenValid(idToken) {\n    try {\n      const parsed = this.parseJwt(idToken);\n      const currentTime = Math.ceil(Date.now() / 1000) + 5; // Convert current time to seconds since epoch\n      return parsed.exp && currentTime < parsed.exp;\n    } catch (e) {\n      return false;\n    }\n  }\n  async rawLogoutGoogle(accessToken, tokenValid = null) {\n    if (tokenValid === null) {\n      tokenValid = await this.accessTokenIsValid(accessToken);\n    }\n    if (tokenValid === true) {\n      try {\n        await fetch(`https://accounts.google.com/o/oauth2/revoke?token=${encodeURIComponent(accessToken)}`);\n        this.clearStateGoogle();\n      } catch (e) {\n        // ignore\n      }\n      return;\n    } else {\n      this.clearStateGoogle();\n      return;\n    }\n  }\n  persistStateGoogle(accessToken, idToken) {\n    try {\n      window.localStorage.setItem(this.GOOGLE_STATE_KEY, JSON.stringify({\n        accessToken,\n        idToken\n      }));\n    } catch (e) {\n      console.error('Cannot persist state google', e);\n    }\n  }\n  clearStateGoogle() {\n    try {\n      window.localStorage.removeItem(this.GOOGLE_STATE_KEY);\n    } catch (e) {\n      console.error('Cannot clear state google', e);\n    }\n  }\n  getGoogleState() {\n    try {\n      const state = window.localStorage.getItem(this.GOOGLE_STATE_KEY);\n      if (!state) return null;\n      const {\n        accessToken,\n        idToken\n      } = JSON.parse(state);\n      return {\n        accessToken,\n        idToken\n      };\n    } catch (e) {\n      console.error('Cannot get state google', e);\n      return null;\n    }\n  }\n  async traditionalOAuth({\n    scopes,\n    hostedDomain,\n    nonce\n  }) {\n    const uniqueScopes = [...new Set([...(scopes || []), 'openid'])];\n    const params = new URLSearchParams(Object.assign(Object.assign({\n      client_id: this.clientId,\n      redirect_uri: this.redirectUrl || window.location.origin + window.location.pathname,\n      response_type: this.loginType === 'offline' ? 'code' : 'token id_token',\n      scope: uniqueScopes.join(' ')\n    }, nonce && {\n      nonce\n    }), {\n      include_granted_scopes: 'true',\n      state: 'popup'\n    }));\n    if (hostedDomain !== undefined) {\n      params.append('hd', hostedDomain);\n    }\n    const url = `https://accounts.google.com/o/oauth2/v2/auth?${params.toString()}`;\n    const width = 500;\n    const height = 600;\n    const left = window.screenX + (window.outerWidth - width) / 2;\n    const top = window.screenY + (window.outerHeight - height) / 2;\n    localStorage.setItem(BaseSocialLogin.OAUTH_STATE_KEY, 'true');\n    const popup = window.open(url, 'Google Sign In', `width=${width},height=${height},left=${left},top=${top},popup=1`);\n    let popupClosedInterval;\n    let timeoutHandle;\n    // This may never return...\n    return new Promise((resolve, reject) => {\n      if (!popup) {\n        reject(new Error('Failed to open popup'));\n        return;\n      }\n      const handleMessage = event => {\n        var _a, _b, _c;\n        if (event.origin !== window.location.origin || ((_b = (_a = event.data) === null || _a === void 0 ? void 0 : _a.source) === null || _b === void 0 ? void 0 : _b.startsWith('angular'))) return;\n        if (((_c = event.data) === null || _c === void 0 ? void 0 : _c.type) === 'oauth-response') {\n          window.removeEventListener('message', handleMessage);\n          clearInterval(popupClosedInterval);\n          if (this.loginType === 'online') {\n            const {\n              accessToken,\n              idToken\n            } = event.data;\n            if (accessToken && idToken) {\n              const profile = this.parseJwt(idToken);\n              this.persistStateGoogle(accessToken.token, idToken);\n              resolve({\n                provider: 'google',\n                result: {\n                  accessToken: {\n                    token: accessToken.token\n                  },\n                  idToken,\n                  profile: {\n                    email: profile.email || null,\n                    familyName: profile.family_name || null,\n                    givenName: profile.given_name || null,\n                    id: profile.sub || null,\n                    name: profile.name || null,\n                    imageUrl: profile.picture || null\n                  },\n                  responseType: 'online'\n                }\n              });\n            }\n          } else {\n            const {\n              serverAuthCode\n            } = event.data;\n            resolve({\n              provider: 'google',\n              result: {\n                responseType: 'offline',\n                serverAuthCode\n              }\n            });\n          }\n        }\n        // Don't reject for non-OAuth messages, just ignore them\n      };\n      window.addEventListener('message', handleMessage);\n      // Timeout after 5 minutes\n      timeoutHandle = setTimeout(() => {\n        clearTimeout(timeoutHandle);\n        window.removeEventListener('message', handleMessage);\n        popup.close();\n        reject(new Error('OAuth timeout'));\n      }, 300000);\n      popupClosedInterval = setInterval(() => {\n        if (popup.closed) {\n          clearInterval(popupClosedInterval);\n          reject(new Error('Popup closed'));\n        }\n      }, 1000);\n    });\n  }\n}\n", "import { WebPlugin } from '@capacitor/core';\nimport { AppleSocialLogin } from './apple-provider';\nimport { FacebookSocialLogin } from './facebook-provider';\nimport { GoogleSocialLogin } from './google-provider';\nexport class SocialLoginWeb extends WebPlugin {\n  constructor() {\n    var _a;\n    super();\n    this.googleProvider = new GoogleSocialLogin();\n    this.appleProvider = new AppleSocialLogin();\n    this.facebookProvider = new FacebookSocialLogin();\n    // Set up listener for OAuth redirects if we have a pending OAuth flow\n    if (localStorage.getItem(SocialLoginWeb.OAUTH_STATE_KEY)) {\n      console.log('OAUTH_STATE_KEY found');\n      const result = this.handleOAuthRedirect();\n      if (result) {\n        (_a = window.opener) === null || _a === void 0 ? void 0 : _a.postMessage(Object.assign({\n          type: 'oauth-response'\n        }, result.result), window.location.origin);\n        window.close();\n      }\n    }\n  }\n  handleOAuthRedirect() {\n    const url = new URL(window.location.href);\n    return this.googleProvider.handleOAuthRedirect(url);\n  }\n  async initialize(options) {\n    var _a, _b, _c;\n    const initPromises = [];\n    if ((_a = options.google) === null || _a === void 0 ? void 0 : _a.webClientId) {\n      initPromises.push(this.googleProvider.initialize(options.google.webClientId, options.google.mode, options.google.hostedDomain, options.google.redirectUrl));\n    }\n    if ((_b = options.apple) === null || _b === void 0 ? void 0 : _b.clientId) {\n      initPromises.push(this.appleProvider.initialize(options.apple.clientId, options.apple.redirectUrl));\n    }\n    if ((_c = options.facebook) === null || _c === void 0 ? void 0 : _c.appId) {\n      initPromises.push(this.facebookProvider.initialize(options.facebook.appId));\n    }\n    await Promise.all(initPromises);\n  }\n  async login(options) {\n    switch (options.provider) {\n      case 'google':\n        return this.googleProvider.login(options.options);\n      case 'apple':\n        return this.appleProvider.login(options.options);\n      case 'facebook':\n        return this.facebookProvider.login(options.options);\n      default:\n        throw new Error(`Login for ${options.provider} is not implemented on web`);\n    }\n  }\n  async logout(options) {\n    switch (options.provider) {\n      case 'google':\n        return this.googleProvider.logout();\n      case 'apple':\n        return this.appleProvider.logout();\n      case 'facebook':\n        return this.facebookProvider.logout();\n      default:\n        throw new Error(`Logout for ${options.provider} is not implemented`);\n    }\n  }\n  async isLoggedIn(options) {\n    switch (options.provider) {\n      case 'google':\n        return this.googleProvider.isLoggedIn();\n      case 'apple':\n        return this.appleProvider.isLoggedIn();\n      case 'facebook':\n        return this.facebookProvider.isLoggedIn();\n      default:\n        throw new Error(`isLoggedIn for ${options.provider} is not implemented`);\n    }\n  }\n  async getAuthorizationCode(options) {\n    switch (options.provider) {\n      case 'google':\n        return this.googleProvider.getAuthorizationCode();\n      case 'apple':\n        return this.appleProvider.getAuthorizationCode();\n      case 'facebook':\n        return this.facebookProvider.getAuthorizationCode();\n      default:\n        throw new Error(`getAuthorizationCode for ${options.provider} is not implemented`);\n    }\n  }\n  async refresh(options) {\n    switch (options.provider) {\n      case 'google':\n        return this.googleProvider.refresh();\n      case 'apple':\n        return this.appleProvider.refresh();\n      case 'facebook':\n        return this.facebookProvider.refresh(options.options);\n      default:\n        throw new Error(`Refresh for ${options.provider} is not implemented`);\n    }\n  }\n  async providerSpecificCall(options) {\n    throw new Error(`Provider specific call for ${options.call} is not implemented`);\n  }\n}\nSocialLoginWeb.OAUTH_STATE_KEY = 'social_login_oauth_pending';\n"],
  "mappings": "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",
  "names": ["_a"]
}
