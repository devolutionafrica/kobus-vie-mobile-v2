import{Ca as m,N as f,O as d,P as g,d as p,t as u}from"./chunk-R3JMOR4V.js";import{a as h,b as c}from"./chunk-LNJ3S2LQ.js";var a=function(t){return t[t.State=0]="State",t[t.Transition=1]="Transition",t[t.Sequence=2]="Sequence",t[t.Group=3]="Group",t[t.Animate=4]="Animate",t[t.Keyframes=5]="Keyframes",t[t.Style=6]="Style",t[t.Trigger=7]="Trigger",t[t.Reference=8]="Reference",t[t.AnimateChild=9]="AnimateChild",t[t.AnimateRef=10]="AnimateRef",t[t.Query=11]="Query",t[t.Stagger=12]="Stagger",t}(a||{}),D="*";function C(t,e=null){return{type:a.Sequence,steps:t,options:e}}function F(t){return{type:a.Style,styles:t,offset:null}}var _=class{_onDoneFns=[];_onStartFns=[];_onDestroyFns=[];_originalOnDoneFns=[];_originalOnStartFns=[];_started=!1;_destroyed=!1;_finished=!1;_position=0;parentPlayer=null;totalTime;constructor(e=0,s=0){this.totalTime=e+s}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(e=>e()),this._onDoneFns=[])}onStart(e){this._originalOnStartFns.push(e),this._onStartFns.push(e)}onDone(e){this._originalOnDoneFns.push(e),this._onDoneFns.push(e)}onDestroy(e){this._onDestroyFns.push(e)}hasStarted(){return this._started}init(){}play(){this.hasStarted()||(this._onStart(),this.triggerMicrotask()),this._started=!0}triggerMicrotask(){queueMicrotask(()=>this._onFinish())}_onStart(){this._onStartFns.forEach(e=>e()),this._onStartFns=[]}pause(){}restart(){}finish(){this._onFinish()}destroy(){this._destroyed||(this._destroyed=!0,this.hasStarted()||this._onStart(),this.finish(),this._onDestroyFns.forEach(e=>e()),this._onDestroyFns=[])}reset(){this._started=!1,this._finished=!1,this._onStartFns=this._originalOnStartFns,this._onDoneFns=this._originalOnDoneFns}setPosition(e){this._position=this.totalTime?e*this.totalTime:1}getPosition(){return this.totalTime?this._position/this.totalTime:1}triggerCallback(e){let s=e=="start"?this._onStartFns:this._onDoneFns;s.forEach(n=>n()),s.length=0}},y=class{_onDoneFns=[];_onStartFns=[];_finished=!1;_started=!1;_destroyed=!1;_onDestroyFns=[];parentPlayer=null;totalTime=0;players;constructor(e){this.players=e;let s=0,n=0,i=0,r=this.players.length;r==0?queueMicrotask(()=>this._onFinish()):this.players.forEach(o=>{o.onDone(()=>{++s==r&&this._onFinish()}),o.onDestroy(()=>{++n==r&&this._onDestroy()}),o.onStart(()=>{++i==r&&this._onStart()})}),this.totalTime=this.players.reduce((o,v)=>Math.max(o,v.totalTime),0)}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(e=>e()),this._onDoneFns=[])}init(){this.players.forEach(e=>e.init())}onStart(e){this._onStartFns.push(e)}_onStart(){this.hasStarted()||(this._started=!0,this._onStartFns.forEach(e=>e()),this._onStartFns=[])}onDone(e){this._onDoneFns.push(e)}onDestroy(e){this._onDestroyFns.push(e)}hasStarted(){return this._started}play(){this.parentPlayer||this.init(),this._onStart(),this.players.forEach(e=>e.play())}pause(){this.players.forEach(e=>e.pause())}restart(){this.players.forEach(e=>e.restart())}finish(){this._onFinish(),this.players.forEach(e=>e.finish())}destroy(){this._onDestroy()}_onDestroy(){this._destroyed||(this._destroyed=!0,this._onFinish(),this.players.forEach(e=>e.destroy()),this._onDestroyFns.forEach(e=>e()),this._onDestroyFns=[])}reset(){this.players.forEach(e=>e.reset()),this._destroyed=!1,this._finished=!1,this._started=!1}setPosition(e){let s=e*this.totalTime;this.players.forEach(n=>{let i=n.totalTime?Math.min(1,s/n.totalTime):1;n.setPosition(i)})}getPosition(){let e=this.players.reduce((s,n)=>s===null||n.totalTime>s.totalTime?n:s,null);return e!=null?e.getPosition():0}beforeDestroy(){this.players.forEach(e=>{e.beforeDestroy&&e.beforeDestroy()})}triggerCallback(e){let s=e=="start"?this._onStartFns:this._onDoneFns;s.forEach(n=>n()),s.length=0}},w="!";var b="primary",l=class t{constructor(e){Object.assign(this,e)}static create(e){return!(e!=null&&e.template)&&!(e!=null&&e.type)&&console.warn(`[ngx-spinner]: Property "type" is missed. Please, provide animation type to <ngx-spinner> component
        and ensure css is added to angular.json file`),new t(e)}},ue=(()=>{let e=class e{constructor(){this.spinnerObservable=new p(null)}getSpinner(n){return this.spinnerObservable.asObservable().pipe(u(i=>i&&i.name===n))}show(n=b,i){return new Promise((r,o)=>{setTimeout(()=>{i&&Object.keys(i).length?(i.name=n,this.spinnerObservable.next(new l(c(h({},i),{show:!0}))),r(!0)):(this.spinnerObservable.next(new l({name:n,show:!0})),r(!0))},10)})}hide(n=b,i=10){return new Promise((r,o)=>{setTimeout(()=>{this.spinnerObservable.next(new l({name:n,show:!1})),r(!0)},i)})}};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=f({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})(),S=new g("NGX_SPINNER_CONFIG");var fe=(()=>{let e=class e{static forRoot(n){return{ngModule:e,providers:[{provide:S,useValue:n}]}}};e.\u0275fac=function(i){return new(i||e)},e.\u0275mod=m({type:e}),e.\u0275inj=d({});let t=e;return t})();export{a,D as b,C as c,F as d,_ as e,y as f,w as g,ue as h,fe as i};
